package fuzzing

import (
	"math/big"
	"math/rand"

	"github.com/ethereum/go-ethereum/common"
	"github.com/holiman/goevmlab/ops"
	"github.com/holiman/goevmlab/program"
)

func fillSimple(gst *GstMaker, fork string) {
	dest := common.HexToAddress("0xd0de")
	forkDef := ops.LookupFork(fork)
	if forkDef == nil {
		panic("bad fork")
	}
	gst.AddAccount(dest, GenesisAccount{
		Code:    generateSimpleOpsProgram(forkDef),
		Balance: new(big.Int),
		Storage: make(map[common.Hash]common.Hash),
	})
	// The transaction
	gst.SetTx(&StTransaction{
		// 8M gaslimit
		GasLimit:   []uint64{16000000},
		Nonce:      0,
		Value:      []string{randHex(4)},
		Data:       []string{randHex(100)},
		GasPrice:   big.NewInt(0x10),
		To:         dest.Hex(),
		Sender:     sender,
		PrivateKey: pKey,
	})
}

func fillMemOps(gst *GstMaker, fork string) {
	dest := common.HexToAddress("0xd0de")
	gst.AddAccount(dest, GenesisAccount{
		Code:    generateMemoryInteractingOpsProgram(),
		Balance: new(big.Int),
		Storage: make(map[common.Hash]common.Hash),
	})
	// The transaction
	gst.SetTx(&StTransaction{
		// 8M gaslimit
		GasLimit:   []uint64{16000000},
		Nonce:      0,
		Value:      []string{randHex(4)},
		Data:       []string{randHex(100)},
		GasPrice:   big.NewInt(0x10),
		To:         dest.Hex(),
		Sender:     sender,
		PrivateKey: pKey,
	})
}

var operations = []ops.OpCode{
	ops.ADD,
	ops.MUL,
	ops.SUB,
	ops.DIV,
	ops.SDIV,
	ops.MOD,
	ops.SMOD,
	ops.ADDMOD,
	ops.MULMOD,
	ops.EXP,
	ops.SIGNEXTEND,
	ops.LT,
	ops.GT,
	ops.SLT,
	ops.SGT,
	ops.EQ,
	ops.ISZERO,
	ops.AND,
	ops.OR,
	ops.XOR,
	ops.NOT,
	ops.BYTE,
	ops.SHL,
	ops.SHR,
	ops.SAR,
}

// generateSimpleOpsProgram generates non-erroring programs with some degree
// of interestingness on inputs for various arithmetic ops.
func generateSimpleOpsProgram(forkDef *ops.Fork) []byte {

	var p = program.NewProgram()
	var stackdepth = 0

	for nCases := 0; nCases < 10000; nCases++ {
		op := ops.OpCode(operations[rand.Intn(len(operations))])

		if stackdepth < len(op.Pops()) {
			for i := 0; i < len(op.Pops()); i++ {
				idx := rand.Intn(len(integers))
				a, _ := big.NewInt(0).SetString(integers[idx], 16)
				p.Push(a)
				stackdepth++
			}
		}
		// stack depth is sufficient now
		if stackdepth > 1 && rand.Uint32()%2 == 0 {
			p.Op(ops.SWAP1)
		}
		p.Op(op)
		stackdepth -= len(op.Pops())
		stackdepth += len(op.Pushes())
	}
	return p.Bytecode()
}

var memOps = []ops.OpCode{
	ops.KECCAK256,
	ops.CALLDATALOAD,
	ops.CALLDATACOPY,
	ops.CODECOPY,
	ops.EXTCODECOPY,
	ops.RETURNDATACOPY,
	ops.MLOAD,
	ops.MSTORE,
	ops.MSTORE8,
	ops.RETURN,
	ops.REVERT,
}

// generateMemoryInteractingOpsProgram generates potentially erroring programs with some degree
// of interestingness on inputs for various arithmetic ops. These operations include
// memory access ops, which may be OOG.
func generateMemoryInteractingOpsProgram() []byte {

	var p = program.NewProgram()
	var stackdepth = 0

	for nCases := 0; nCases < 1000; nCases++ {
		op := ops.OpCode(memOps[rand.Intn(len(memOps))])

		if stackdepth < len(op.Pops()) {
			for i := 0; i < len(op.Pops()); i++ {
				idx := rand.Intn(len(integers))
				a, _ := big.NewInt(0).SetString(integers[idx], 16)
				p.Push(a)
				stackdepth++
			}
		}
		// stack depth is sufficient now
		if stackdepth > 1 && rand.Uint32()%2 == 0 {
			p.Op(ops.SWAP1)
		}
		p.Op(op)
		stackdepth -= len(op.Pops())
		stackdepth += len(op.Pushes())
		if op == ops.RETURN || op == ops.REVERT {
			break
		}
	}
	return p.Bytecode()
}

var integers = []string{
	"0",                                    // 0,
	"1",                                    // 1,
	"5",                                    // 5,
	"7",                                    // 7,
	"111",                                  // 273,
	"7fffffff",                             // 2147483647,
	"80000000",                             // 2147483648,
	"80000001",                             // 2147483649,
	"1ce97e1ab91a",                         // 31789168638234,
	"1fffffffffffffff",                     // 2305843009213693951,
	"7000000000000000",                     // 8070450532247928832,
	"7fffffffffffffff",                     // 9223372036854775807,
	"8000000000000000",                     // 9223372036854775808,
	"8000000000000001",                     // 9223372036854775809,
	"b368d219438b7f3f",                     // 12927813736316239679,
	"d021262626262626",                     // 14997310179411109414,
	"fffffffffffffffe",                     // 18446744073709551614,
	"ffffffffffffffff",                     // 18446744073709551615,
	"10000000000000000",                    // 18446744073709551616,
	"1fffffffffffffffe",                    // 36893488147419103230,
	"66aa0a5319bcf5cb4",                    // 118363787039037414580,
	"100000000000000000",                   // 295147905179352825856,
	"210000000000000022",                   // 608742554432415203362,
	"232323232323232323",                   // 648167948629166990115,
	"478392145435897052",                   // 1319199491750854488146,
	"6d5adef08547abf7eb",                   // 2017243039397808175083,
	"1000000000000000000",                  // 4722366482869645213696,
	"10000000000000000000",                 // 75557863725914323419136,
	"100000000000000000000",                // 1208925819614629174706176,
	"1000000000000000000000",               // 19342813113834066795298816,
	"10000000000000000000000",              // 309485009821345068724781056,
	"100000000000000000000000",             // 4951760157141521099596496896,
	"1000000000000000000000000",            // 79228162514264337593543950336,
	"10000000000000000000000000",           // 1267650600228229401496703205376,
	"100000000000000000000000000",          // 20282409603651670423947251286016,
	"12121212121212121212121212121212",     // 24019931782654479773885266406948344338,
	"80000000000000000000000000000000",     // 170141183460469231731687303715884105728,
	"80000000000000000000000000000001",     // 170141183460469231731687303715884105729,
	"80000000000000010000000000000000",     // 170141183460469231750134047789593657344,
	"dac7fff9ffd9e1322626262626262600",     // 290810161977403566083729818231379469824,
	"2000110000000d0a300e750a000000090a0a", // 2787615746692260271883130301581282232568330,
	"767676767676000000000076000000760000", // 10319560523241585026580541495883343806726144,
	"767676767676767676000000767676767676", // 10319560523241621689022186341022517987538550,
	"767676767676767676000000767676767676", // 10319560523241621689022186341022517987538550,
	"100000000ffffffffffffffff0000000000002e000000",                    // 95780971326418798845927312337221116429204928239501312,
	"13590cab83b779e708b533b0eef3561483ddeefc841f5",                    // 115822239079852546481048046312713476286602371989520885,
	"fffc000000000000767676240000000000002b0576047",                    // 1532402004761099680610025348427576441132786332472926279,
	"2900760076761e00020076760000000076767676000000",                   // 3927192283303822637735575139001825579372326304297779200,
	"fffff716b61616160b0b0b2b0b230b000008010d0a2b00",                   // 24519915629997942325667257696251319673715302724400720640,
	"2ffffffffffffffffffffffffffffffffff000000030000",                  // 73559785961562665201200657303214840813699196389836390400,
	"2ffffffffffffffffffffffffffffffffff200000000000",                  // 73559785961562665201200657303214840813699231574208282624,
	"4b00000b41000b0b0b2b0b0b0b0b0b410a0aeff4f40b0a0a",                 // 1838994665486670002766594388089078929691579061417420720650,
	"7effffff8000000000000000000000000000000000008001",                 // 3114030938308735341518709700067585844755136386449113382913,
	"7effffff800000007effffff800000008000ff0000010000",                 // 3114030938308735341687521655492656079366011366720265060352,
	"800000000000000080000000000000008000000000000000",                 // 3138550867693340382088035895064302439792088397984756137984,
	"8200000000000000fe000004000000ffff000000fffff700",                 // 3187590725001048825722985727718924388423896143107178100480,
	"6400aff20ff00200004e7fd1eff08ffca0afd1eff08ffca0a",                // 39232939110930528744601301942473888155375172455024761489930,
	"10900000000000000000000000000000000000000000000000000",            // 425838581728632423018619954470408089668383793352440101354864640,
	"c9700000000000000000023f00c00014ff002c000000000000223108",         // 21213844752984988295461862897192720612437368093667043717512289202440,
	"c9700000000000000000023f00c00014ff000000000000000022300805",       // 5430744256764157003638236901681336476783966178786027128639462348687365,
	"c76f4afb041407a8ea478d65024f5c3dfe1db1a1bb10c5ea8bec314ccf9",      // 86027998341432740117770066570886114837847609743973915675934816478743801,
	"767676767676000000000076000000000000005600000000000000000000",     // 817599818211171020364016980903386961836382790909833109915863139265544192,
	"50beb1c60141a0000dc2b0b0b0b0b0b410a0a0df4f40b090b2b0bc60a0a00",    // 8916493109441976310852863659209874319478312384556870711370214445446466048,
	"1f000000000000000000000000000000200000000100000000000000000000",   // 54772259008129914217082222523030473990818154302618511111702382751780962304,
	"40000000fd000000db0000000000000000000040000000fd000000db000001",   // 113078212249894760364873354929450439558491263794124554418684870668071206913,
	"40000000fd000000db0000000000000000000040000000fd000000db0000d3",   // 113078212249894760364873354929450439558491263794124554418684870668071207123,
	"4b00000b41000b0b0b2b0b0b0b0b0b410a0aeff4f40b090b2b0bc60a0a1000",   // 132513531043553551448253963897652500239072097170808277177802548367413874688,
	"e8e8e8e2000100000009ea02000000000000ff3ffffff80000001000220000",   // 411516002689246878242414408302228879976125350630647443405216952703497928704,
	"e8e8e8e2000100000009ea02000000000000ff3ffffff800000010002280ff",   // 411516002689246878242414408302228879976125350630647443405216952703497961727,
	"12cbafcee8f60f9f3fa308c90fde8d298772ffea667aa6bc109d5c661e7929a5", // 8501514612542184092390575447124242484935613711494939844958686891992629717413,
	"40000000fd000000db0000000000000000000000000000000000000000000001", // 28948022335973058653407578861939312526973763526225283525603383033450301751297,
	"5fd8fffffffffffffffffffffffffffffc090000ce700004d0c9ffffff000001", // 43353126428467216294985370775728991622853702196389538837190718643767731027969,
	"62d8fffffffffffffffffffffffffffffc18000000000000000000ca00000001", // 44710064974217015460105343256299553043009287713579002907638714428248106729473,
	"77676767676760000000000000001002e000000000000040000000e000000000", // 54007927896718791997223319484302659500946919893668040600301495995934273699840,
	"7effffff8000000000000000000000000000000000000000d900000000000001", // 57443731756594857989836848446820259243073341118401551355195011073780079394817,
	"7effffff80000000000000000000000000020000440000000000000000000001", // 57443731756594857989836848446820259243073351503016313405502483101539792584705,
	"7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd", // 57896044618658097711785492504343953926634992332820282019728792003956564819965,
	"7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe", // 57896044618658097711785492504343953926634992332820282019728792003956564819966,
	"7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff", // 57896044618658097711785492504343953926634992332820282019728792003956564819967,
	"8000000000000000000000000000000000000000000000000000000000000000", // 57896044618658097711785492504343953926634992332820282019728792003956564819968,
	"8000000000000000000000000000000000000000000000000000000000000001", // 57896044618658097711785492504343953926634992332820282019728792003956564819969,
	"8000000000000000000000000000000000000000000000000000000000000002", // 57896044618658097711785492504343953926634992332820282019728792003956564819970,
	"8000000000000001800000000000000080000000000000008000000000000000", // 57896044618658097721201145107423975072558817651092250875623235846405355470848,
	"8200000000000000000000000000000000000000000000000000000000000000", // 58800670315824630488532140824724328206738664088020598926287054379018386145280,
	"eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee", // 108072616621495115728666252674775380663051985687931193103493745074052254330606,
	"f6376770abd3a36b20394c5664afef1194c801c3f05e42566f085ed24d002bb0", // 111366851257529553670969785791271302757833671277921199640020876866057656085424,
	"fffff716b61616160b0b0b2b0b0b0becf4bef50a0df4f48b090b2b0bc60a0a00", // 115792027733893823835557637051478419483214256988020684858149337355129358780928,
	"ffffffffffffffff7effffff800000007effffff800000008000ff0000010000", // 115792089237316195420407914211609962431121716897925553702721239930169360187392,
	"fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb", // 115792089237316195423570985008687907853269984665640564039457584007913129639931,
	"fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe", // 115792089237316195423570985008687907853269984665640564039457584007913129639934,
	"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff", // 115792089237316195423570985008687907853269984665640564039457584007913129639935,
}
