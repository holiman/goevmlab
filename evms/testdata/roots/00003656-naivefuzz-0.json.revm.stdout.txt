
Running tests in 00003656-naivefuzz-0.json...

Traces:
{"pc":0,"op":96,"gas":"0x4757","gasCost":"0x3","stack":[],"depth":1,"returnData":"0x","refund":"0x0","memSize":"0","opName":"PUSH1"}
{"pc":2,"op":96,"gas":"0x4754","gasCost":"0x3","stack":["0x0"],"depth":1,"returnData":"0x","refund":"0x0","memSize":"0","opName":"PUSH1"}
{"pc":4,"op":96,"gas":"0x4751","gasCost":"0x3","stack":["0x0","0x0"],"depth":1,"returnData":"0x","refund":"0x0","memSize":"0","opName":"PUSH1"}
{"pc":6,"op":96,"gas":"0x474e","gasCost":"0x3","stack":["0x0","0x0","0x0"],"depth":1,"returnData":"0x","refund":"0x0","memSize":"0","opName":"PUSH1"}
{"pc":8,"op":96,"gas":"0x474b","gasCost":"0x3","stack":["0x0","0x0","0x0","0x0"],"depth":1,"returnData":"0x","refund":"0x0","memSize":"0","opName":"PUSH1"}
{"pc":10,"op":90,"gas":"0x4748","gasCost":"0x2","stack":["0x0","0x0","0x0","0x0","0xf3"],"depth":1,"returnData":"0x","refund":"0x0","memSize":"0","opName":"GAS"}
{"pc":11,"op":244,"gas":"0x4746","gasCost":"0x4652","stack":["0x0","0x0","0x0","0x0","0xf3","0x4746"],"depth":1,"returnData":"0x","refund":"0x0","memSize":"0","opName":"DELEGATECALL","error":"CallOrCreate"}
{"pc":0,"op":96,"gas":"0x3c2a","gasCost":"0x3","stack":[],"depth":2,"returnData":"0x","refund":"0x0","memSize":"0","opName":"PUSH1"}
{"pc":2,"op":96,"gas":"0x3c27","gasCost":"0x3","stack":["0x0"],"depth":2,"returnData":"0x","refund":"0x0","memSize":"0","opName":"PUSH1"}
{"pc":4,"op":85,"gas":"0x3c24","gasCost":"0x1388","stack":["0x0","0x2"],"depth":2,"returnData":"0x","refund":"0x0","memSize":"0","opName":"SSTORE"}
{"pc":5,"op":96,"gas":"0x289c","gasCost":"0x3","stack":[],"depth":2,"returnData":"0x","refund":"0x12c0","memSize":"0","opName":"PUSH1"}
{"pc":7,"op":96,"gas":"0x2899","gasCost":"0x3","stack":["0x0"],"depth":2,"returnData":"0x","refund":"0x12c0","memSize":"0","opName":"PUSH1"}
{"pc":9,"op":96,"gas":"0x2896","gasCost":"0x3","stack":["0x0","0x0"],"depth":2,"returnData":"0x","refund":"0x12c0","memSize":"0","opName":"PUSH1"}
{"pc":11,"op":96,"gas":"0x2893","gasCost":"0x3","stack":["0x0","0x0","0x0"],"depth":2,"returnData":"0x","refund":"0x12c0","memSize":"0","opName":"PUSH1"}
{"pc":13,"op":96,"gas":"0x2890","gasCost":"0x3","stack":["0x0","0x0","0x0","0x0"],"depth":2,"returnData":"0x","refund":"0x12c0","memSize":"0","opName":"PUSH1"}
{"pc":15,"op":96,"gas":"0x288d","gasCost":"0x3","stack":["0x0","0x0","0x0","0x0","0x0"],"depth":2,"returnData":"0x","refund":"0x12c0","memSize":"0","opName":"PUSH1"}
{"pc":17,"op":90,"gas":"0x288a","gasCost":"0x2","stack":["0x0","0x0","0x0","0x0","0x0","0xf9"],"depth":2,"returnData":"0x","refund":"0x12c0","memSize":"0","opName":"GAS"}
{"pc":18,"op":242,"gas":"0x2888","gasCost":"0x280f","stack":["0x0","0x0","0x0","0x0","0x0","0xf9","0x2888"],"depth":2,"returnData":"0x","refund":"0x12c0","memSize":"0","opName":"CALLCODE","error":"CallOrCreate"}
{"pc":0,"op":96,"gas":"0x1de7","gasCost":"0x3","stack":[],"depth":3,"returnData":"0x","refund":"0x0","memSize":"0","opName":"PUSH1"}
{"pc":2,"op":96,"gas":"0x1de4","gasCost":"0x3","stack":["0x0"],"depth":3,"returnData":"0x","refund":"0x0","memSize":"0","opName":"PUSH1"}
{"pc":4,"op":96,"gas":"0x1de1","gasCost":"0x3","stack":["0x0","0x0"],"depth":3,"returnData":"0x","refund":"0x0","memSize":"0","opName":"PUSH1"}
{"pc":6,"op":96,"gas":"0x1dde","gasCost":"0x3","stack":["0x0","0x0","0x0"],"depth":3,"returnData":"0x","refund":"0x0","memSize":"0","opName":"PUSH1"}
{"pc":8,"op":96,"gas":"0x1ddb","gasCost":"0x3","stack":["0x0","0x0","0x0","0x0"],"depth":3,"returnData":"0x","refund":"0x0","memSize":"0","opName":"PUSH1"}
{"pc":10,"op":90,"gas":"0x1dd8","gasCost":"0x2","stack":["0x0","0x0","0x0","0x0","0xf8"],"depth":3,"returnData":"0x","refund":"0x0","memSize":"0","opName":"GAS"}
{"pc":11,"op":244,"gas":"0x1dd6","gasCost":"0x1d88","stack":["0x0","0x0","0x0","0x0","0xf8","0x1dd6"],"depth":3,"returnData":"0x","refund":"0x0","memSize":"0","opName":"DELEGATECALL","error":"CallOrCreate"}
{"pc":0,"op":96,"gas":"0x1360","gasCost":"0x3","stack":[],"depth":4,"returnData":"0x","refund":"0x0","memSize":"0","opName":"PUSH1"}
{"pc":2,"op":96,"gas":"0x135d","gasCost":"0x3","stack":["0x0"],"depth":4,"returnData":"0x","refund":"0x0","memSize":"0","opName":"PUSH1"}
{"pc":4,"op":96,"gas":"0x135a","gasCost":"0x3","stack":["0x0","0x0"],"depth":4,"returnData":"0x","refund":"0x0","memSize":"0","opName":"PUSH1"}
{"pc":6,"op":96,"gas":"0x1357","gasCost":"0x3","stack":["0x0","0x0","0x2"],"depth":4,"returnData":"0x","refund":"0x0","memSize":"0","opName":"PUSH1"}
{"pc":8,"op":85,"gas":"0x1354","gasCost":"0x64","stack":["0x0","0x0","0x2","0x2"],"depth":4,"returnData":"0x","refund":"0x0","memSize":"0","opName":"SSTORE"}
{"pc":9,"op":96,"gas":"0x12f0","gasCost":"0x3","stack":["0x0","0x0"],"depth":4,"returnData":"0x","refund":"0xffffffffffffed40","memSize":"0","opName":"PUSH1"}
{"pc":11,"op":80,"gas":"0x12ed","gasCost":"0x2","stack":["0x0","0x0","0x1"],"depth":4,"returnData":"0x","refund":"0xffffffffffffed40","memSize":"0","opName":"POP"}
{"pc":12,"op":0,"gas":"0x12eb","gasCost":"0x0","stack":["0x0","0x0"],"depth":4,"returnData":"0x","refund":"0xffffffffffffed40","memSize":"0","opName":"STOP"}
{"pc":12,"op":80,"gas":"0x1339","gasCost":"0x2","stack":["0x1"],"depth":3,"returnData":"0x","refund":"0xffffffffffffed40","memSize":"0","opName":"POP"}
{"pc":13,"op":96,"gas":"0x1337","gasCost":"0x3","stack":[],"depth":3,"returnData":"0x","refund":"0xffffffffffffed40","memSize":"0","opName":"PUSH1"}
{"pc":15,"op":253,"gas":"0x1334","gasCost":"0x0","stack":["0x0"],"depth":3,"returnData":"0x","refund":"0xffffffffffffed40","memSize":"0","opName":"REVERT","error":"StackUnderflow"}
{"pc":19,"op":96,"gas":"0x79","gasCost":"0x3","stack":["0x0"],"depth":2,"returnData":"0x","refund":"0x12c0","memSize":"0","opName":"PUSH1"}
{"pc":21,"op":84,"gas":"0x76","gasCost":"0x0","stack":["0x0","0x3"],"depth":2,"returnData":"0x","refund":"0x12c0","memSize":"0","opName":"SLOAD","error":"OutOfGas"}
{"pc":12,"op":80,"gas":"0xf4","gasCost":"0x2","stack":["0x0"],"depth":1,"returnData":"0x","refund":"0x0","memSize":"0","opName":"POP"}
{"pc":13,"op":96,"gas":"0xf2","gasCost":"0x3","stack":[],"depth":1,"returnData":"0x","refund":"0x0","memSize":"0","opName":"PUSH1"}
{"pc":15,"op":84,"gas":"0xef","gasCost":"0x0","stack":["0x3"],"depth":1,"returnData":"0x","refund":"0x0","memSize":"0","opName":"SLOAD","error":"OutOfGas"}

Execution result: Ok(
    Halt {
        reason: OutOfGas(
            Basic,
        ),
        gas_used: 39391,
    },
)

Expected exception: None

State before: CacheState {
    accounts: {
        0x00000000000000000000000000000000000000f1: CacheAccount {
            account: Some(
                PlainAccount {
                    info: AccountInfo {
                        balance: 0x0_U256,
                        nonce: 0,
                        code_hash: 0xd0e70c85054ae6dd4eb0c5d908100d52f290d717c6ce81ebed5344d32c30572e,
                        code: Some(
                            LegacyRaw(
                                0x600060006000600060f35af450600354506000f4506000600060006000600060045af1507f60016000557fa8600060006000600060f95af4507f7f466b1d1a15600060006050,
                            ),
                        ),
                    },
                    storage: {
                        0x0000000000000000000000000000000000000000000000000000000000000002_U256: 0x0000000000000000000000000000000000000000000000000000000000000008_U256,
                    },
                },
            ),
            status: Loaded,
        },
        0x00000000000000000000000000000000000000f3: CacheAccount {
            account: Some(
                PlainAccount {
                    info: AccountInfo {
                        balance: 0x0_U256,
                        nonce: 0,
                        code_hash: 0x9c83f91760db27d8ad30c47f4b4d83959f25a05c18139464c5efc611232acee2,
                        code: Some(
                            LegacyRaw(
                                0x60006002556000600060006000600060f95af260035450f09660006000fd,
                            ),
                        ),
                    },
                    storage: {},
                },
            ),
            status: Loaded,
        },
        0x00000000000000000000000000000000000000f8: CacheAccount {
            account: Some(
                PlainAccount {
                    info: AccountInfo {
                        balance: 0x0_U256,
                        nonce: 0,
                        code_hash: 0xe23bbd3e6d7933a33f91a21ab9c4dbfed3729ea683bad4298468d0599596f9ed,
                        code: Some(
                            LegacyRaw(
                                0x600060006002600255600150,
                            ),
                        ),
                    },
                    storage: {},
                },
            ),
            status: Loaded,
        },
        0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b: CacheAccount {
            account: Some(
                PlainAccount {
                    info: AccountInfo {
                        balance: 0x000000000000000000000000000000000000000000000000000000ffffffffff_U256,
                        nonce: 0,
                        code_hash: 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470,
                        code: Some(
                            LegacyRaw(
                                0x,
                            ),
                        ),
                    },
                    storage: {},
                },
            ),
            status: Loaded,
        },
        0x00000000000000000000000000000000000000f9: CacheAccount {
            account: Some(
                PlainAccount {
                    info: AccountInfo {
                        balance: 0x0_U256,
                        nonce: 0,
                        code_hash: 0xa70374b2d016f7fb0bafe4b7b37b0c03485d9d6dd09d47f06dce0963e1757220,
                        code: Some(
                            LegacyRaw(
                                0x600060006000600060f85af4506000fd,
                            ),
                        ),
                    },
                    storage: {},
                },
            ),
            status: Loaded,
        },
    },
    contracts: {},
    has_state_clear: false,
}

State after: CacheState {
    accounts: {
        0x00000000000000000000000000000000000000f1: CacheAccount {
            account: Some(
                PlainAccount {
                    info: AccountInfo {
                        balance: 0x0_U256,
                        nonce: 0,
                        code_hash: 0xd0e70c85054ae6dd4eb0c5d908100d52f290d717c6ce81ebed5344d32c30572e,
                        code: Some(
                            LegacyRaw(
                                0x600060006000600060f35af450600354506000f4506000600060006000600060045af1507f60016000557fa8600060006000600060f95af4507f7f466b1d1a15600060006050,
                            ),
                        ),
                    },
                    storage: {
                        0x0000000000000000000000000000000000000000000000000000000000000002_U256: 0x0000000000000000000000000000000000000000000000000000000000000008_U256,
                        0x0000000000000000000000000000000000000000000000000000000000000003_U256: 0x0_U256,
                    },
                },
            ),
            status: Loaded,
        },
        0x00000000000000000000000000000000000000f3: CacheAccount {
            account: Some(
                PlainAccount {
                    info: AccountInfo {
                        balance: 0x0_U256,
                        nonce: 0,
                        code_hash: 0x9c83f91760db27d8ad30c47f4b4d83959f25a05c18139464c5efc611232acee2,
                        code: Some(
                            LegacyRaw(
                                0x60006002556000600060006000600060f95af260035450f09660006000fd,
                            ),
                        ),
                    },
                    storage: {},
                },
            ),
            status: Loaded,
        },
        0x00000000000000000000000000000000000000f8: CacheAccount {
            account: Some(
                PlainAccount {
                    info: AccountInfo {
                        balance: 0x0_U256,
                        nonce: 0,
                        code_hash: 0xe23bbd3e6d7933a33f91a21ab9c4dbfed3729ea683bad4298468d0599596f9ed,
                        code: Some(
                            LegacyRaw(
                                0x600060006002600255600150,
                            ),
                        ),
                    },
                    storage: {},
                },
            ),
            status: Loaded,
        },
        0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b: CacheAccount {
            account: Some(
                PlainAccount {
                    info: AccountInfo {
                        balance: 0x000000000000000000000000000000000000000000000000000000fffff6620f_U256,
                        nonce: 1,
                        code_hash: 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470,
                        code: Some(
                            LegacyRaw(
                                0x,
                            ),
                        ),
                    },
                    storage: {},
                },
            ),
            status: InMemoryChange,
        },
        0xb94f5374fce5edbc8e2a8697c15331677e6ebf0b: CacheAccount {
            account: None,
            status: LoadedNotExisting,
        },
        0x00000000000000000000000000000000000000f9: CacheAccount {
            account: Some(
                PlainAccount {
                    info: AccountInfo {
                        balance: 0x0_U256,
                        nonce: 0,
                        code_hash: 0xa70374b2d016f7fb0bafe4b7b37b0c03485d9d6dd09d47f06dce0963e1757220,
                        code: Some(
                            LegacyRaw(
                                0x600060006000600060f85af4506000fd,
                            ),
                        ),
                    },
                    storage: {},
                },
            ),
            status: Loaded,
        },
    },
    contracts: {},
    has_state_clear: true,
}

Specification: LONDON

Environment: Env {
    cfg: CfgEnv {
        chain_id: 1,
        kzg_settings: Default,
        perf_analyse_created_bytecodes: Analyse,
        limit_contract_code_size: None,
    },
    block: BlockEnv {
        number: 0x0000000000000000000000000000000000000000000000000000000000000001_U256,
        coinbase: 0xb94f5374fce5edbc8e2a8697c15331677e6ebf0b,
        timestamp: 0x00000000000000000000000000000000000000000000000000000000000003e8_U256,
        gas_limit: 0x0000000000000000000000000000000000000000000000000026e1f476fe1e22_U256,
        basefee: 0x0000000000000000000000000000000000000000000000000000000000000010_U256,
        difficulty: 0x0000000000000000000000000000000000000000000000000000000000200000_U256,
        prevrandao: None,
        blob_excess_gas_and_price: Some(
            BlobExcessGasAndPrice {
                excess_blob_gas: 0,
                blob_gasprice: 1,
            },
        ),
    },
    tx: TxEnv {
        caller: 0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b,
        gas_limit: 39391,
        gas_price: 0x0000000000000000000000000000000000000000000000000000000000000010_U256,
        transact_to: Call(
            0x00000000000000000000000000000000000000f1,
        ),
        value: 0x000000000000000000000000000000000000000000000000000000000000819c_U256,
        data: 0xa598da695a2e18ee,
        nonce: None,
        chain_id: None,
        access_list: [],
        gas_priority_fee: None,
        blob_hashes: [],
        max_fee_per_blob_gas: None,
        eof_initcodes: [],
        eof_initcodes_hashed: {},
    },
}

Test name: "00003656-naivefuzz-0" (index: 0, path: 00003656-naivefuzz-0.json) failed:
Test 00003656-naivefuzz-0 failed: logs root mismatch: got 0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347, expected 0x0000000000000000000000000000000000000000000000000000000000000000
Finished execution. Total CPU time: 0.000169s
Encountered 1 errors out of 1 total tests
Test 00003656-naivefuzz-0 failed: logs root mismatch: got 0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347, expected 0x0000000000000000000000000000000000000000000000000000000000000000
